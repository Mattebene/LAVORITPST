import javafx.application.Application;
import javafx.scene.control.Button;
import javafx.stage.Stage;
import java.util.ArrayList;
import java.util.List;

/**
 * Applicazione per la riproduzione casuale di video.
 */
public class Video extends Application {

    // Lista degli URL dei video
    private List<String> elencoVideo = new ArrayList<>();
    // Indice dell'ultimo video riprodotto casualmente
    private int ultimoIndiceCasuale = -1;

    /**
     * Metodo principale per avviare l'applicazione.
     * @param primaryStage Lo stage principale dell'applicazione.
     */
    @Override
    public void start(Stage primaryStage) {

        // Aggiunta degli URL dei video alla lista
        elencoVideo.add("C:\\percorso\\del\\video1.mp4");
        elencoVideo.add("C:\\percorso\\del\\video2.mp4");
        elencoVideo.add("C:\\percorso\\del\\video3.mp4");
        elencoVideo.add("C:\\percorso\\del\\video4.mp4");
        elencoVideo.add("C:\\percorso\\del\\video5.mp4");

        // Creazione di un pulsante per riprodurre un video casuale
        Button riproduciButton = new Button("Riproduci Video");
        riproduciButton.setOnAction(e -> videoCasuale());

        // Ciclo infinito che stampa i video riprodotti casualmente
        while (true) {
            int indiceCasuale = ottieniIndiceCasuale();
            System.out.println("Riproduzione di: Video " + (indiceCasuale + 1));
            try {
                Thread.sleep(1000); // Attende 1 secondo prima di riprodurre un altro video
            } catch (InterruptedException ex) {
                Thread.currentThread().interrupt();
            }
        }
    }

    /**
     * Metodo per ottenere un indice casuale dalla lista dei video.
     * @return Indice casuale.
     */
    private int ottieniIndiceCasuale() {
        int indiceCasuale;
        int precedenteIndiceCasuale = ultimoIndiceCasuale;
        do {
            indiceCasuale = (int) (Math.random() * elencoVideo.size());
        } while (indiceCasuale == precedenteIndiceCasuale);
        ultimoIndiceCasuale = indiceCasuale;
        return indiceCasuale;
    }

    /**
     * Metodo per riprodurre un video casuale.
     */
    private void videoCasuale() {
        int indiceCasuale = ottieniIndiceCasuale();
        // Implementazione della riproduzione del video casuale
    }
}
