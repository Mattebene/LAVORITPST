package it.edu.iisgubbio.Prova;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.layout.GridPane;
import javafx.stage.Stage;

public class FcS extends Application {

    /**
     * Il punto di ingresso principale per l'applicazione JavaFX.
     *
     * @param args Gli argomenti della riga di comando (non utilizzati).
     */
    public static void main(String[] args) {
        launch(args);
    }

    /**
     * Il metodo start viene chiamato dopo che il metodo init ha restituito il controllo e dopo che il sistema è pronto per far iniziare l'applicazione.
     * È responsabile per la creazione e la configurazione del palcoscenico principale e della scena per l'applicazione JavaFX.
     *
     * @param primaryStage Il palcoscenico principale per questa applicazione.
     */
    public void start(Stage primaryStage) {

        int[] tempiServizio = {0, 5, 8, 16}; // Array dei tempi di servizio per i processi

        int[] tempiAttesa = new int[tempiServizio.length]; // Array per memorizzare i tempi di attesa per ogni processo
        int[] tempiEsecuzione = new int[tempiServizio.length]; // Array per memorizzare i tempi di esecuzione per ogni processo

        tempiAttesa[0] = 0; // Il tempo di attesa per il primo processo è 0
        tempiEsecuzione[0] = tempiServizio[0]; // Il tempo di esecuzione per il primo processo è il suo tempo di servizio

        // Calcola i tempi di attesa e di esecuzione per ogni processo
        for (int i = 1; i < tempiServizio.length; i++) {
            tempiAttesa[i] = tempiEsecuzione[i - 1]; // Il tempo di attesa è uguale al tempo di esecuzione del processo precedente
            tempiEsecuzione[i] = tempiAttesa[i] + tempiServizio[i]; // Il tempo di esecuzione è il tempo di attesa più il tempo di servizio
        }

        GridPane gridPane = new GridPane();
        gridPane.setPadding(new Insets(10));
        gridPane.setHgap(10);
        gridPane.setVgap(5);

        for (int i = 0; i < tempiServizio.length; i++) {
            Label labelProcesso = new Label("Processo " + (i + 1));
            Label labelTempoAttesa = new Label("Tempo di attesa: " + tempiAttesa[i]);
            Label labelTempoEsecuzione = new Label("Tempo di esecuzione: " + tempiEsecuzione[i]);

            gridPane.add(labelProcesso, 0, i);
            gridPane.add(labelTempoAttesa, 1, i);
            gridPane.add(labelTempoEsecuzione, 2, i);
        }

        Scene scene = new Scene(gridPane, 400, 300);
        primaryStage.setScene(scene);
        primaryStage.setTitle("Risultati FcS");
        primaryStage.show();
    }
}
